# Generated by Django 4.2.7 on 2025-07-03 15:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Amenities',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_booking_id', models.CharField(blank=True, max_length=100)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('num_guests', models.IntegerField()),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('checked_out', 'Checked Out'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_generated_instructions', models.TextField(blank=True)),
                ('sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_endpoint', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='channel_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('requires_api_key', models.BooleanField(default=True)),
                ('supports_webhooks', models.BooleanField(default=False)),
                ('rate_limit_per_minute', models.IntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('api_secret', models.CharField(blank=True, max_length=255)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('is_connected', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_errors', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('preferences', models.JSONField(blank=True, default=dict)),
                ('satisfaction_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('villa', 'Villa'), ('condo', 'Condo'), ('studio', 'Studio')], max_length=20)),
                ('address', models.CharField(max_length=300)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('bedrooms', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('bathrooms', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('max_guests', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('ai_pricing_enabled', models.BooleanField(default=False)),
                ('ai_maintenance_enabled', models.BooleanField(default=False)),
                ('ai_guest_enabled', models.BooleanField(default=False)),
                ('ai_analytics_enabled', models.BooleanField(default=False)),
                ('last_pricing_update', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=300)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('ai_pricing_enabled', models.BooleanField(default=False)),
                ('ai_maintenance_enabled', models.BooleanField(default=False)),
                ('ai_guest_enabled', models.BooleanField(default=False)),
                ('ai_analytics_enabled', models.BooleanField(default=False)),
                ('subscription_plan', models.CharField(default='free', max_length=50)),
                ('subscription_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='booking_vision_APP.property')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('min_days_ahead', models.IntegerField(default=0)),
                ('max_days_ahead', models.IntegerField(default=365)),
                ('min_stay_length', models.IntegerField(default=1)),
                ('max_stay_length', models.IntegerField(default=30)),
                ('base_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('weekend_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('holiday_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('high_demand_threshold', models.DecimalField(decimal_places=2, default=0.8, max_digits=5)),
                ('high_demand_multiplier', models.DecimalField(decimal_places=2, default=1.2, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_rules', to='booking_vision_APP.property')),
            ],
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('average_daily_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('occupancy_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('revenue_per_available_room', models.DecimalField(decimal_places=2, max_digits=10)),
                ('search_volume', models.IntegerField(default=0)),
                ('booking_lead_time', models.IntegerField(default=0)),
                ('events', models.JSONField(blank=True, default=list)),
                ('season_factor', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Market Data',
                'ordering': ['-date'],
                'unique_together': {('location', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('predicted_by_ai', models.BooleanField(default=False)),
                ('prediction_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('predicted_failure_date', models.DateField(blank=True, null=True)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Duration in hours', null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_tasks', to='booking_vision_APP.property')),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuestPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_temperature', models.IntegerField(blank=True, null=True)),
                ('preferred_check_in_time', models.TimeField(blank=True, null=True)),
                ('preferred_check_out_time', models.TimeField(blank=True, null=True)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('dietary_restrictions', models.JSONField(blank=True, default=list)),
                ('guest_type', models.CharField(blank=True, max_length=50)),
                ('spending_pattern', models.CharField(blank=True, max_length=50)),
                ('communication_preference', models.CharField(blank=True, max_length=50)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('loyalty_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('guest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_preferences', to='booking_vision_APP.guest')),
            ],
        ),
        migrations.CreateModel(
            name='BookingMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('guest', 'Guest'), ('host', 'Host')], max_length=20)),
                ('message', models.TextField()),
                ('is_automated', models.BooleanField(default=False)),
                ('sentiment_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='booking_vision_APP.booking')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='booking_vision_APP.channel'),
        ),
        migrations.AddField(
            model_name='booking',
            name='guest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='booking_vision_APP.guest'),
        ),
        migrations.AddField(
            model_name='booking',
            name='rental_property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='booking_vision_APP.property'),
        ),
        migrations.CreateModel(
            name='PropertyChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_property_id', models.CharField(max_length=100)),
                ('channel_url', models.URLField(blank=True)),
                ('sync_availability', models.BooleanField(default=True)),
                ('sync_rates', models.BooleanField(default=True)),
                ('sync_content', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.channel')),
                ('channel_connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.channelconnection')),
                ('rental_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.property')),
            ],
            options={
                'unique_together': {('rental_property', 'channel')},
            },
        ),
        migrations.CreateModel(
            name='PropertyAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.amenity')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_vision_APP.property')),
            ],
            options={
                'verbose_name_plural': 'Property Amenities',
                'unique_together': {('property', 'amenity')},
            },
        ),
    ]
